{"ast":null,"code":"var _jsxFileName = \"D:\\\\ahtung\\\\\\u0440\\u0435\\u0430\\u043A\\u0442\\\\zp2\\\\zp2\\\\src\\\\App.js\";\nimport React from 'react';\n/* global XLS */\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      coefficient: 1,\n      sum: 0,\n      profitFromCustomerEngineer: 0,\n      deductionFromCustomerEngineer: 0,\n      refillingCartridges: 0,\n      machineMaintenance: 0\n    };\n\n    this.filePicked = oEvent => {\n      var self = this; // Get The File From The Input\n\n      var oFile = oEvent.target.files[0]; // Create A File Reader HTML5\n\n      var reader = new FileReader(); // Ready The Event For When A File Gets Selected\n\n      reader.onload = function (e) {\n        var data = e.target.result;\n        var cfb = XLS.CFB.read(data, {\n          type: 'binary'\n        });\n        var wb = XLS.parse_xlscfb(cfb); // Loop Over Each Sheet\n\n        wb.SheetNames.forEach(function (sheetName) {\n          var oJS = XLS.utils.sheet_to_row_object_array(wb.Sheets[sheetName]); // console.log(oJS[1].total) //вывести сумму из 2го объекта\n\n          var sum_all_arr = oJS.map(function (sum) {\n            return sum.total;\n          }); // console.log(sum_all_arr);//массив из сумм\n\n          var SUM = function (array) {\n            var sum = 0;\n\n            for (var i = 0; i < array.length; i++) {\n              sum += parseInt(array[i], 10); //сложить все суммы, перевод из сток в числа\n            } // console.log(sum);// выводит итоговую сумму за всех клиентов \n\n\n            self.setState({\n              sum\n            }); //обновляем состояние суммы    \n          };\n\n          SUM(sum_all_arr);\n        });\n      }; // Tell JS To Start Reading The File.. You could delay this if desired\n\n\n      reader.readAsBinaryString(oFile);\n    };\n\n    this.handleChangeCoefficient = this.handleChangeCoefficient.bind(this);\n    this.handleChangeProfitFromCustomerEngineer = this.handleChangeProfitFromCustomerEngineer.bind(this);\n    this.deductionFromCustomerEnginee = this.deductionFromCustomerEnginee.bind(this);\n    this.handleChangeRefillingCartridges = this.handleChangeRefillingCartridges.bind(this);\n    this.handleChangeMachineMaintenance = this.handleChangeMachineMaintenance.bind(this);\n  }\n\n  handleChangeCoefficient(e) {\n    this.setState({\n      coefficient: e.currentTarget.value\n    });\n  }\n\n  handleChangeProfitFromCustomerEngineer(e) {\n    this.setState({\n      profitFromCustomerEngineer: e.currentTarget.value\n    });\n  }\n\n  handleChangeDeductionFromCustomerEnginee(e) {\n    this.setState({\n      deductionFromCustomerEngineer: e.currentTarget.value\n    });\n  }\n\n  handleChangeRefillingCartridges(e) {\n    this.setState({\n      refillingCartridges: e.currentTarget.value\n    });\n  }\n\n  handleChangeMachineMaintenance(e) {\n    this.setState({\n      machineMaintenance: e.currentTarget.value\n    });\n  }\n\n  render() {\n    const rateWorker = 15480;\n    const _this$state = this.state,\n          coefficient = _this$state.coefficient,\n          sum = _this$state.sum,\n          deductionFromCustomerEngineer = _this$state.deductionFromCustomerEngineer,\n          profitFromCustomerEngineer = _this$state.profitFromCustomerEngineer,\n          refillingCartridges = _this$state.refillingCartridges,\n          machineMaintenance = _this$state.machineMaintenance;\n    const first = sum * coefficient;\n    const second = profitFromCustomerEngineer - deductionFromCustomerEngineer;\n    const third = first + second;\n    const fourth = machineMaintenance * 0.5;\n    const fife = third + parseInt(refillingCartridges, 10);\n    return React.createElement(\"div\", {\n      className: \"section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-6 col-lg-offset-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"upload_file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0444\\u0430\\u0439\\u043B\"), React.createElement(\"input\", {\n      id: \"upload_file\",\n      type: \"file\",\n      name: \"files[]\",\n      className: \"form-control-file\",\n      placeholder: \"\\u0432\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0444\\u0430\\u0439\\u043B xls\",\n      onChange: this.filePicked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      for: \"enter_coefficient\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043A\\u043E\\u044D\\u0444\\u0444\\u0438\\u0446\\u0438\\u0435\\u043D\\u0442\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"enter_coefficient\",\n      className: \"form-control\",\n      onChange: this.handleChangeKoef,\n      placeholder: \"\\u043A\\u043E\\u044D\\u0444\\u0444\\u0438\\u0446\\u0438\\u0435\\u043D\\u0442\",\n      value: coefficient,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      for: \"enter_profitFromCustomerEngineer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"+ \\u041A\\u043B\\u0438\\u0435\\u043D\\u0442\\u044B \\u0438\\u043D\\u0436\\u0435\\u043D\\u0435\\u0440\\u0430\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"enter_profitFromCustomerEngineer\",\n      className: \"form-control\",\n      onChange: this.handleChangeProfitFromCustomerEngineer,\n      placeholder: \"\\u043F\\u043B\\u044E\\u0441 \\u043A\\u043B\\u0438\\u0435\\u043D\\u0442\\u044B \\u0438\\u043D\\u0436\\u0435\\u043D\\u0435\\u0440\\u0430\",\n      value: profitFromCustomerEngineer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      for: \"enter_deductionFromCustomerEngineer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"- \\u041A\\u043B\\u0438\\u0435\\u043D\\u0442\\u044B \\u0438\\u043D\\u0436\\u0435\\u043D\\u0435\\u0440\\u0430\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"enter_deductionFromCustomerEngineer\",\n      className: \"form-control\",\n      onChange: this.deductionFromCustomerEnginee,\n      placeholder: \"\\u043C\\u0438\\u043D\\u0443\\u0441 \\u043A\\u043B\\u0438\\u0435\\u043D\\u0442\\u044B \\u0438\\u043D\\u0436\\u0435\\u043D\\u0435\\u0440\\u0430\",\n      value: deductionFromCustomerEngineer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      for: \"refillingCartridges\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"\\u0417\\u0430\\u043F\\u0440\\u0430\\u0432\\u043A\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0440\\u0438\\u0434\\u0436\\u0435\\u0439\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"refillingCartridges\",\n      className: \"form-control\",\n      onChange: this.handleChangeRefillingCartridges,\n      placeholder: \"\\u0437\\u0430\\u043F\\u0440\\u0430\\u0432\\u043A\\u0430\",\n      value: refillingCartridges,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      for: \"machineMaintenance\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"\\u0420\\u0430\\u0441\\u0445\\u043E\\u0434\\u044B \\u043D\\u0430 \\u043C\\u0430\\u0448\\u0438\\u043D\\u0443\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"machineMaintenance\",\n      className: \"form-control\",\n      onChange: this.handleChangeCar,\n      placeholder: \"\\u0440\\u0430\\u0441\\u0445\\u043E\\u0434\\u044B \\u043D\\u0430 \\u043C\\u0430\\u0448\\u0438\\u043D\\u0443\",\n      value: machineMaintenance,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"\\u0418\\u0442\\u043E\\u0433\\u043E:\", fife - fourth - rateWorker)))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/ahtung/реакт/zp2/zp2/src/App.js"],"names":["React","App","Component","constructor","props","state","coefficient","sum","profitFromCustomerEngineer","deductionFromCustomerEngineer","refillingCartridges","machineMaintenance","filePicked","oEvent","self","oFile","target","files","reader","FileReader","onload","e","data","result","cfb","XLS","CFB","read","type","wb","parse_xlscfb","SheetNames","forEach","sheetName","oJS","utils","sheet_to_row_object_array","Sheets","sum_all_arr","map","total","SUM","array","i","length","parseInt","setState","readAsBinaryString","handleChangeCoefficient","bind","handleChangeProfitFromCustomerEngineer","deductionFromCustomerEnginee","handleChangeRefillingCartridges","handleChangeMachineMaintenance","currentTarget","value","handleChangeDeductionFromCustomerEnginee","render","rateWorker","first","second","third","fourth","fife","handleChangeKoef","handleChangeCar"],"mappings":"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","sourcesContent":["import React from 'react';\n/* global XLS */\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nclass App extends React.Component{\n  constructor(props) {\n    super(props);\n    this.handleChangeCoefficient = this.handleChangeCoefficient.bind(this);\n    this.handleChangeProfitFromCustomerEngineer = this.handleChangeProfitFromCustomerEngineer.bind(this);\n    this.deductionFromCustomerEnginee = this.deductionFromCustomerEnginee.bind(this);\n    this.handleChangeRefillingCartridges = this.handleChangeRefillingCartridges.bind(this);\n    this.handleChangeMachineMaintenance = this.handleChangeMachineMaintenance.bind(this)\n  }\n    state = {\n      coefficient: 1,\n      sum: 0,\n      profitFromCustomerEngineer: 0,\n      deductionFromCustomerEngineer: 0,\n      refillingCartridges: 0,\n      machineMaintenance: 0,\n    }\n    handleChangeCoefficient(e){\n      this.setState({coefficient: e.currentTarget.value})\n    }\n    handleChangeProfitFromCustomerEngineer(e){\n      this.setState({profitFromCustomerEngineer: e.currentTarget.value})\n    }\n    handleChangeDeductionFromCustomerEnginee(e){\n      this.setState({deductionFromCustomerEngineer: e.currentTarget.value})\n    }\n    handleChangeRefillingCartridges(e){\n      this.setState({refillingCartridges: e.currentTarget.value})\n    }\n    handleChangeMachineMaintenance(e){\n      this.setState({machineMaintenance: e.currentTarget.value})\n    }\n    filePicked =(oEvent)=> {\n      var self = this;\n        // Get The File From The Input\n    var oFile = oEvent.target.files[0];\n    \n    // Create A File Reader HTML5\n    var reader = new FileReader();\n\n    // Ready The Event For When A File Gets Selected\n    reader.onload = function(e) {\n        var data = e.target.result;\n        var cfb = XLS.CFB.read(data, {type: 'binary'});\n        var wb = XLS.parse_xlscfb(cfb);\n        // Loop Over Each Sheet\n        wb.SheetNames.forEach(function(sheetName) {             \n            var oJS = XLS.utils.sheet_to_row_object_array(wb.Sheets[sheetName]);   \n            // console.log(oJS[1].total) //вывести сумму из 2го объекта\n            var sum_all_arr = oJS.map(function(sum){\n              return sum.total\n            });           \n              // console.log(sum_all_arr);//массив из сумм\n             var SUM = function(array){\n                var sum = 0;\n                for(var i = 0; i < array.length; i++){\n                  sum += parseInt (array[i], 10);//сложить все суммы, перевод из сток в числа\n                }                \n                // console.log(sum);// выводит итоговую сумму за всех клиентов \n                self.setState({sum})  //обновляем состояние суммы    \n              }\n              SUM(sum_all_arr);\n        });\n    };\n    // Tell JS To Start Reading The File.. You could delay this if desired\n    reader.readAsBinaryString(oFile);\n    }\n\n    render(){\n      const rateWorker = 15480\n      const {coefficient, sum, deductionFromCustomerEngineer, profitFromCustomerEngineer, refillingCartridges, machineMaintenance} = this.state\n      const first = sum * coefficient\n      const second = profitFromCustomerEngineer - deductionFromCustomerEngineer\n      const third = first + second\n      const fourth = machineMaintenance * 0.5\n      const fife = third + parseInt(refillingCartridges, 10)\n      return(\n        <div className = \"section\">\n          <div className = \"container\">\n            <div className = \"row\">\n              <div className = \"col-lg-6 col-lg-offset-3\">\n                <form>\n                  <div className = \"form-group\">\n                    <label for = \"upload_file\">Выберите файл</label>\n                      <input \n                        id=\"upload_file\" \n                        type = \"file\"  \n                        name=\"files[]\" \n                        className = \"form-control-file\" \n                        placeholder = \"выберите файл xls\"\n                        onChange = {this.filePicked}\n                      />\n                    <label for = \"enter_coefficient\">Введите коэффициент</label>\n                      <input \n                        type = \"text\"\n                        id = \"enter_coefficient\"\n                        className = \"form-control\"\n                        onChange = {this.handleChangeKoef}\n                        placeholder = \"коэффициент\"\n                        value = {coefficient}\n                      />\n                    <label for = \"enter_profitFromCustomerEngineer\">\n                      + Клиенты инженера\n                    </label>\n                      <input \n                        type = \"text\"\n                        id = \"enter_profitFromCustomerEngineer\"\n                        className = \"form-control\"\n                        onChange = {this.handleChangeProfitFromCustomerEngineer}\n                        placeholder = \"плюс клиенты инженера\"\n                        value = {profitFromCustomerEngineer}\n                      />\n                    <label for = \"enter_deductionFromCustomerEngineer\">\n                      - Клиенты инженера\n                    </label>\n                      <input \n                        type = \"text\"\n                        id = \"enter_deductionFromCustomerEngineer\"\n                        className = \"form-control\"\n                        onChange = {this.deductionFromCustomerEnginee}\n                        placeholder = \"минус клиенты инженера\"\n                        value = {deductionFromCustomerEngineer}\n                      />\n                    <label for = \"refillingCartridges\">\n                      Заправка картриджей\n                    </label>\n                      <input \n                        type = \"text\"\n                        id = \"refillingCartridges\"\n                        className = \"form-control\"\n                        onChange = {this.handleChangeRefillingCartridges}\n                        placeholder = \"заправка\"\n                        value = {refillingCartridges}\n                      />\n                    <label for = \"machineMaintenance\">\n                      Расходы на машину\n                    </label>\n                      <input \n                        type = \"text\"\n                        id = \"machineMaintenance\"\n                        className = \"form-control\"\n                        onChange = {this.handleChangeCar}\n                        placeholder = \"расходы на машину\"\n                        value = {machineMaintenance}\n                      />\n                  <p>Итого:{fife - fourth - rateWorker}</p>\n        </div>\n          </form>\n            </div>\n              </div>\n                </div>\n                  </div>\n      )\n    }\n  }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
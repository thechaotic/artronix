{"ast":null,"code":"var _jsxFileName = \"D:\\\\ahtung\\\\\\u0440\\u0435\\u0430\\u043A\\u0442\\\\zp2\\\\zp2\\\\src\\\\App.js\";\nimport React from 'react';\n/* global XLS */\n\nimport './App.css';\nimport { Form } from 'react-bootstrap';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      gaz: '',\n      koef: 1,\n      sum: 0\n    };\n\n    this.handleChangeGaz = e => {\n      this.setState({\n        gaz: e.currentTarget.value\n      });\n    };\n\n    this.handleChangeKoef = e => {\n      this.setState({\n        koef: e.currentTarget.value\n      });\n    };\n\n    this.filePicked = oEvent => {\n      var self = this; // Get The File From The Input\n\n      var oFile = oEvent.target.files[0]; // Create A File Reader HTML5\n\n      var reader = new FileReader(); // Ready The Event For When A File Gets Selected\n\n      reader.onload = function (e) {\n        var data = e.target.result;\n        var cfb = XLS.CFB.read(data, {\n          type: 'binary'\n        });\n        var wb = XLS.parse_xlscfb(cfb); // Loop Over Each Sheet\n\n        wb.SheetNames.forEach(function (sheetName) {\n          var oJS = XLS.utils.sheet_to_row_object_array(wb.Sheets[sheetName]); // console.log(oJS[1].total) //вывести сумму из 2го объекта\n\n          var sum_all_arr = oJS.map(function (sum) {\n            return sum.total;\n          }); // console.log(sum_all_arr);//массив из сумм\n\n          var SUM = function (array) {\n            var sum = 0;\n\n            for (var i = 0; i < array.length; i++) {\n              sum += parseInt(array[i], 10); //сложить все суммы, перевод из сток в числа\n            } // console.log(sum);// выводит итоговую сумму за всех клиентов \n\n\n            self.setState({\n              sum\n            }); //обновляем состояние суммы    \n          };\n\n          SUM(sum_all_arr);\n        });\n      }; // Tell JS To Start Reading The File.. You could delay this if desired\n\n\n      reader.readAsBinaryString(oFile);\n    };\n  }\n\n  render() {\n    const Stavka = 15480;\n    const _this$state = this.state,\n          gaz = _this$state.gaz,\n          koef = _this$state.koef,\n          sum = _this$state.sum;\n    return React.createElement(\"form\", {\n      className: \"form_zp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"upload\",\n      type: \"file\",\n      name: \"files[]\",\n      className: \"form-control\" //'input_file'\n      ,\n      placeholder: \"\\u0432\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0444\\u0430\\u0439\\u043B xls\",\n      onChange: this.filePicked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"input_gazolin\",\n      onChange: this.handleChangeGaz,\n      placeholder: \"\\u0431\\u0435\\u043D\\u0437\\u0438\\u043D \\u0441\\u0443\\u043C\\u043C\\u0430\",\n      value: gaz,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"input_koef\",\n      onChange: this.handleChangeKoef,\n      placeholder: \"\\u043A\\u043E\\u044D\\u0444\\u0444\\u0438\\u0446\\u0438\\u0435\\u043D\\u0442\",\n      value: koef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"Total_zp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"\\u0418\\u0442\\u043E\\u0433\\u043E:\", (sum - Stavka - gaz) * koef));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/ahtung/реакт/zp2/zp2/src/App.js"],"names":["React","Form","App","Component","state","gaz","koef","sum","handleChangeGaz","e","setState","currentTarget","value","handleChangeKoef","filePicked","oEvent","self","oFile","target","files","reader","FileReader","onload","data","result","cfb","XLS","CFB","read","type","wb","parse_xlscfb","SheetNames","forEach","sheetName","oJS","utils","sheet_to_row_object_array","Sheets","sum_all_arr","map","total","SUM","array","i","length","parseInt","readAsBinaryString","render","Stavka"],"mappings":"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","sourcesContent":["import React from 'react';\n/* global XLS */\nimport './App.css';\nimport { Form } from 'react-bootstrap';\nclass App extends React.Component{\n    state = {\n      gaz: '',\n      koef: 1,\n      sum: 0,\n    }\n    handleChangeGaz = (e)=>{\n      this.setState({gaz: e.currentTarget.value})\n    }\n    handleChangeKoef = (e)=>{\n      this.setState({koef: e.currentTarget.value})\n    }\n    filePicked =(oEvent)=> {\n      var self = this;\n        // Get The File From The Input\n    var oFile = oEvent.target.files[0];\n    \n    // Create A File Reader HTML5\n    var reader = new FileReader();\n\n    // Ready The Event For When A File Gets Selected\n    reader.onload = function(e) {\n        var data = e.target.result;\n        var cfb = XLS.CFB.read(data, {type: 'binary'});\n        var wb = XLS.parse_xlscfb(cfb);\n        // Loop Over Each Sheet\n        wb.SheetNames.forEach(function(sheetName) {             \n            var oJS = XLS.utils.sheet_to_row_object_array(wb.Sheets[sheetName]);   \n            // console.log(oJS[1].total) //вывести сумму из 2го объекта\n            var sum_all_arr = oJS.map(function(sum){\n              return sum.total\n            });           \n              // console.log(sum_all_arr);//массив из сумм\n             var SUM = function(array){\n                var sum = 0;\n                for(var i = 0; i < array.length; i++){\n                  sum += parseInt (array[i], 10);//сложить все суммы, перевод из сток в числа\n                }                \n                // console.log(sum);// выводит итоговую сумму за всех клиентов \n                self.setState({sum})  //обновляем состояние суммы    \n              }\n              SUM(sum_all_arr);\n        });\n    };\n    // Tell JS To Start Reading The File.. You could delay this if desired\n    reader.readAsBinaryString(oFile);\n    }\n\n    render(){\n      const Stavka = 15480;\n      const {gaz, koef, sum} = this.state\n\n      return(\n        \n        <form className = 'form_zp'>\n          <input \n            id=\"upload\" \n            type = \"file\"  \n            name=\"files[]\" \n            className = 'form-control' //'input_file'\n            placeholder = 'выберите файл xls'\n            onChange = {this.filePicked}\n          />\n          <input \n            type = 'text'\n            className = 'input_gazolin'\n            onChange = {this.handleChangeGaz}\n            placeholder = 'бензин сумма'\n            value = {gaz}\n          />\n          <input \n            type = 'text'\n            className = 'input_koef'\n            onChange = {this.handleChangeKoef}\n            placeholder = 'коэффициент'\n            value = {koef}\n          />\n          <p className = 'Total_zp'>Итого:{(sum - Stavka - gaz) * koef}</p>\n        </form>\n      )\n    }\n  }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
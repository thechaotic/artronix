{"ast":null,"code":"const Convert = $(function () {\n  oFileIn = document.getElementById('upload');\n\n  if (oFileIn.addEventListener) {\n    oFileIn.addEventListener('change', filePicked, false);\n  }\n});\n\nfunction filePicked(oEvent) {\n  // Get The File From The Input\n  let oFile = oEvent.target.files[0];\n  let sFilename = oFile.name; // Create A File Reader HTML5\n\n  let reader = new FileReader(); // Ready The Event For When A File Gets Selected\n\n  reader.onload = function (e) {\n    let data = e.target.result;\n    let cfb = XLS.CFB.read(data, {\n      type: 'binary'\n    });\n    let wb = XLS.parse_xlscfb(cfb); // Loop Over Each Sheet\n\n    wb.SheetNames.forEach(function (sheetName) {\n      // Obtain The Current Row As CSV\n      let sCSV = XLS.utils.make_csv(wb.Sheets[sheetName]);\n      let oJS = XLS.utils.sheet_to_row_object_array(wb.Sheets[sheetName]);\n      $(\"#upload\").html(sCSV); // console.log(oJS[1].total) вывести сумму из 2го объекта\n\n      let sum_all_arr = oJS.map(function (sum) {\n        return sum.total;\n      }); // console.log(sum_all_arr);//массив из сумм\n\n      let SUM = function sum_from_client(array) {\n        let sum = 0;\n\n        for (let i = 0; i < array.length; i++) {\n          sum += +array[i];\n        }\n\n        console.log(sum); // выводит итоговую сумму за всех клиентов\n      };\n\n      SUM(sum_all_arr);\n    });\n  }; // Tell JS To Start Reading The File.. You could delay this if desired\n\n\n  reader.readAsBinaryString(oFile);\n}\n\nexport default Convert;","map":{"version":3,"sources":["D:/ahtung/реакт/zp2/zp2/src/convert.js"],"names":["Convert","$","oFileIn","document","getElementById","addEventListener","filePicked","oEvent","oFile","target","files","sFilename","name","reader","FileReader","onload","e","data","result","cfb","XLS","CFB","read","type","wb","parse_xlscfb","SheetNames","forEach","sheetName","sCSV","utils","make_csv","Sheets","oJS","sheet_to_row_object_array","html","sum_all_arr","map","sum","total","SUM","sum_from_client","array","i","length","console","log","readAsBinaryString"],"mappings":"AAEK,MAAMA,OAAO,GAGZC,CAAC,CAAC,YAAW;AACTC,EAAAA,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAV;;AACA,MAAGF,OAAO,CAACG,gBAAX,EAA6B;AACzBH,IAAAA,OAAO,CAACG,gBAAR,CAAyB,QAAzB,EAAmCC,UAAnC,EAA+C,KAA/C;AACH;AACJ,CALA,CAHF;;AAWC,SAASA,UAAT,CAAoBC,MAApB,EAA4B;AACxB;AACA,MAAIC,KAAK,GAAGD,MAAM,CAACE,MAAP,CAAcC,KAAd,CAAoB,CAApB,CAAZ;AACA,MAAIC,SAAS,GAAGH,KAAK,CAACI,IAAtB,CAHwB,CAIxB;;AACA,MAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb,CALwB,CAOxB;;AACAD,EAAAA,MAAM,CAACE,MAAP,GAAgB,UAASC,CAAT,EAAY;AACxB,QAAIC,IAAI,GAAGD,CAAC,CAACP,MAAF,CAASS,MAApB;AACA,QAAIC,GAAG,GAAGC,GAAG,CAACC,GAAJ,CAAQC,IAAR,CAAaL,IAAb,EAAmB;AAACM,MAAAA,IAAI,EAAE;AAAP,KAAnB,CAAV;AACA,QAAIC,EAAE,GAAGJ,GAAG,CAACK,YAAJ,CAAiBN,GAAjB,CAAT,CAHwB,CAIxB;;AACAK,IAAAA,EAAE,CAACE,UAAH,CAAcC,OAAd,CAAsB,UAASC,SAAT,EAAoB;AACtC;AACA,UAAIC,IAAI,GAAGT,GAAG,CAACU,KAAJ,CAAUC,QAAV,CAAmBP,EAAE,CAACQ,MAAH,CAAUJ,SAAV,CAAnB,CAAX;AACA,UAAIK,GAAG,GAAGb,GAAG,CAACU,KAAJ,CAAUI,yBAAV,CAAoCV,EAAE,CAACQ,MAAH,CAAUJ,SAAV,CAApC,CAAV;AAEA3B,MAAAA,CAAC,CAAC,SAAD,CAAD,CAAakC,IAAb,CAAkBN,IAAlB,EALsC,CAMtC;;AACA,UAAIO,WAAW,GAAGH,GAAG,CAACI,GAAJ,CAAQ,UAASC,GAAT,EAAa;AACrC,eAAOA,GAAG,CAACC,KAAX;AACD,OAFiB,CAAlB,CAPsC,CAWpC;;AACD,UAAIC,GAAG,GAAG,SAASC,eAAT,CAAyBC,KAAzB,EAA+B;AACtC,YAAIJ,GAAG,GAAG,CAAV;;AACA,aAAI,IAAIK,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGD,KAAK,CAACE,MAAzB,EAAiCD,CAAC,EAAlC,EAAqC;AACnCL,UAAAA,GAAG,IAAI,CAACI,KAAK,CAACC,CAAD,CAAb;AACD;;AACDE,QAAAA,OAAO,CAACC,GAAR,CAAYR,GAAZ,EALsC,CAKrB;AAClB,OANF;;AAOCE,MAAAA,GAAG,CAACJ,WAAD,CAAH;AACL,KApBD;AAqBH,GA1BD,CARwB,CAoCxB;;;AACAvB,EAAAA,MAAM,CAACkC,kBAAP,CAA0BvC,KAA1B;AACH;;AAEP,eAAeR,OAAf","sourcesContent":["\r\n     \r\n     const Convert =\r\n     \r\n\r\n      $(function() {\r\n          oFileIn = document.getElementById('upload')\r\n          if(oFileIn.addEventListener) {\r\n              oFileIn.addEventListener('change', filePicked, false)\r\n          }\r\n      })\r\n      \r\n      \r\n      function filePicked(oEvent) {\r\n          // Get The File From The Input\r\n          let oFile = oEvent.target.files[0];\r\n          let sFilename = oFile.name;\r\n          // Create A File Reader HTML5\r\n          let reader = new FileReader();\r\n      \r\n          // Ready The Event For When A File Gets Selected\r\n          reader.onload = function(e) {\r\n              let data = e.target.result;\r\n              let cfb = XLS.CFB.read(data, {type: 'binary'});\r\n              let wb = XLS.parse_xlscfb(cfb);\r\n              // Loop Over Each Sheet\r\n              wb.SheetNames.forEach(function(sheetName) {\r\n                  // Obtain The Current Row As CSV\r\n                  let sCSV = XLS.utils.make_csv(wb.Sheets[sheetName]);   \r\n                  let oJS = XLS.utils.sheet_to_row_object_array(wb.Sheets[sheetName]);   \r\n      \r\n                  $(\"#upload\").html(sCSV);\r\n                  // console.log(oJS[1].total) вывести сумму из 2го объекта\r\n                  let sum_all_arr = oJS.map(function(sum){\r\n                    return sum.total\r\n                  })\r\n                  \r\n                    // console.log(sum_all_arr);//массив из сумм\r\n                   let SUM = function sum_from_client(array){\r\n                      let sum = 0;\r\n                      for(let i = 0; i < array.length; i++){\r\n                        sum += +array[i];\r\n                      }\r\n                      console.log(sum);// выводит итоговую сумму за всех клиентов\r\n                    }\r\n                    SUM(sum_all_arr);\r\n              });\r\n          };\r\n      \r\n          // Tell JS To Start Reading The File.. You could delay this if desired\r\n          reader.readAsBinaryString(oFile);\r\n      }\r\n      \r\nexport default Convert;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\ahtung\\\\\\u0440\\u0435\\u0430\\u043A\\u0442\\\\zp2\\\\zp2\\\\src\\\\App.js\";\nimport React from 'react';\n/* global XLS */\n\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      gaz: '',\n      koef: 1,\n      sum\n    };\n\n    this.handleChangeGaz = e => {\n      this.setState({\n        gaz: e.currentTarget.value\n      });\n    };\n\n    this.handleChangeKoef = e => {\n      this.setState({\n        koef: e.currentTarget.value\n      });\n    };\n\n    this.filePicked = oEvent => {\n      // Get The File From The Input\n      var oFile = oEvent.target.files[0]; // Create A File Reader HTML5\n\n      var reader = new FileReader(); // Ready The Event For When A File Gets Selected\n\n      reader.onload = function (e) {\n        var data = e.target.result;\n        var cfb = XLS.CFB.read(data, {\n          type: 'binary'\n        });\n        var wb = XLS.parse_xlscfb(cfb); // Loop Over Each Sheet\n\n        wb.SheetNames.forEach(function (sheetName) {\n          var oJS = XLS.utils.sheet_to_row_object_array(wb.Sheets[sheetName]); // console.log(oJS[1].total) //вывести сумму из 2го объекта\n\n          var sum_all_arr = oJS.map(function (sum) {\n            return sum.total;\n          }); // console.log(sum_all_arr);//массив из сумм\n\n          var SUM = function (array) {\n            var sum = 0;\n\n            for (var i = 0; i < array.length; i++) {\n              sum += +array[i];\n            }\n\n            console.log(sum); // выводит итоговую сумму за всех клиентов\n          };\n\n          SUM(sum_all_arr);\n        });\n      }; // Tell JS To Start Reading The File.. You could delay this if desired\n\n\n      reader.readAsBinaryString(oFile);\n    };\n  }\n\n  render() {\n    // const Stavka = 16000;\n    // const Dobavlenie_procent = 520;\n    // let Total = ((...+y)-(x+z))*j\n    const _this$state = this.state,\n          gaz = _this$state.gaz,\n          koef = _this$state.koef;\n    return React.createElement(\"form\", {\n      className: \"form_zp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"upload\",\n      type: \"file\",\n      name: \"files[]\",\n      className: \"input_file\",\n      onChange: this.filePicked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"input_gazolin\",\n      onChange: this.handleChangeGaz,\n      placeholder: \"\\u0431\\u0435\\u043D\\u0437\\u0438\\u043D \\u0441\\u0443\\u043C\\u043C\\u0430\",\n      value: gaz,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"input_koef\",\n      onChange: this.handleChangeKoef,\n      placeholder: \"\\u043A\\u043E\\u044D\\u0444\\u0444\\u0438\\u0446\\u0438\\u0435\\u043D\\u0442\",\n      value: koef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"Total_zp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"\\u0418\\u0442\\u043E\\u0433\\u043E:\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/ahtung/реакт/zp2/zp2/src/App.js"],"names":["React","App","Component","state","gaz","koef","sum","handleChangeGaz","e","setState","currentTarget","value","handleChangeKoef","filePicked","oEvent","oFile","target","files","reader","FileReader","onload","data","result","cfb","XLS","CFB","read","type","wb","parse_xlscfb","SheetNames","forEach","sheetName","oJS","utils","sheet_to_row_object_array","Sheets","sum_all_arr","map","total","SUM","array","i","length","console","log","readAsBinaryString","render"],"mappings":"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","sourcesContent":["import React from 'react';\n/* global XLS */\nimport './App.css';\n\nclass App extends React.Component{\n    state = {\n      gaz: '',\n      koef: 1,\n      sum\n    }\n    handleChangeGaz = (e)=>{\n      this.setState({gaz: e.currentTarget.value})\n    }\n    handleChangeKoef = (e)=>{\n      this.setState({koef: e.currentTarget.value})\n    }\n    filePicked =(oEvent)=> {\n    \n        // Get The File From The Input\n    var oFile = oEvent.target.files[0];\n    \n    // Create A File Reader HTML5\n    var reader = new FileReader();\n\n    // Ready The Event For When A File Gets Selected\n    reader.onload = function(e) {\n        var data = e.target.result;\n        var cfb = XLS.CFB.read(data, {type: 'binary'});\n        var wb = XLS.parse_xlscfb(cfb);\n        // Loop Over Each Sheet\n        wb.SheetNames.forEach(function(sheetName) {\n              \n            var oJS = XLS.utils.sheet_to_row_object_array(wb.Sheets[sheetName]);   \n\n            \n            // console.log(oJS[1].total) //вывести сумму из 2го объекта\n            var sum_all_arr = oJS.map(function(sum){\n              return sum.total\n            });\n            \n              // console.log(sum_all_arr);//массив из сумм\n             var SUM = function(array){\n                var sum = 0;\n                for(var i = 0; i < array.length; i++){\n                  sum += +array[i];\n                }\n                  \n                console.log(sum);// выводит итоговую сумму за всех клиентов\n              }\n              SUM(sum_all_arr);\n        });\n    };\n\n    // Tell JS To Start Reading The File.. You could delay this if desired\n    reader.readAsBinaryString(oFile);\n\n    }\n\n\n    render(){\n      // const Stavka = 16000;\n      // const Dobavlenie_procent = 520;\n      // let Total = ((...+y)-(x+z))*j\n      \n      \n\n      \n      const {gaz, koef} = this.state\n      return(\n        <form className = 'form_zp'>\n          <input \n          id=\"upload\" \n          type = \"file\"  \n          name=\"files[]\" \n          className = 'input_file' \n          onChange = {this.filePicked}\n          />\n          <input \n          type = 'text'\n          className = 'input_gazolin'\n          onChange = {this.handleChangeGaz}\n          placeholder = 'бензин сумма'\n          value = {gaz}\n          />\n          <input \n          type = 'text'\n          className = 'input_koef'\n          onChange = {this.handleChangeKoef}\n          placeholder = 'коэффициент'\n          value = {koef}\n          />\n          <p className = 'Total_zp'>Итого:{}</p>\n        </form>\n      )\n    }\n  }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}